# Prompt for spelling correction of commands.
setopt CORRECT

# Customize spelling correction prompt.
SPROMPT='zsh: correct %F{red}%R%f to %F{green}%r%f [nyae]? '

# Remove path separator from WORDCHARS.
WORDCHARS=${WORDCHARS//[\/]}

# -----------------
# Zim configuration
# -----------------

if [[ ! ${ZIM_HOME}/init.zsh -nt ${ZDOTDIR:-${HOME}}/.zimrc ]]; then
  # Update static initialization script if it does not exist or it's outdated, before sourcing it
  source ${ZIM_HOME}/zimfw.zsh init -q
fi
source ${ZIM_HOME}/init.zsh

# ------------------------------
# Post-init module configuration
# ------------------------------

bindkey -e
bindkey '^P' history-substring-search-up
bindkey '^N' history-substring-search-down

DOTFILES="$HOME/$(dirname $(dirname $(readlink $(print -P %N))))"

function have_cmd {
    if ! hash $1 2>/dev/null; then
        # echo "zshrc: Command '$1' is not installed"
        return 1
    fi
}

# Variables --------------------------------------------------------------------
export FANCY_PROMPT_DOUBLE_LINE=1
export FANCY_PROMPT_USE_NERD_SYMBOLS=1

export ZSH_AUTOSUGGEST_USE_ASYNC=1

# History ----------------------------------------------------------------------
if [ -d "$XDG_DATA_HOME" ]; then
    HISTFILE="$XDG_DATA_HOME/zsh_history"
fi
HISTSIZE=50000
SAVEHIST=10000
setopt HIST_IGNORE_ALL_DUPS
setopt SHARE_HISTORY
setopt HIST_REDUCE_BLANKS

# Completion -------------------------------------------------------------------
zmodload zsh/complist

# Enable shift-tab to cycle back completions
bindkey -M menuselect '^[[Z' reverse-menu-complete
setopt menu_complete

# Pager ------------------------------------------------------------------------
export PAGER="less"

export LESS="\
    --RAW-CONTROL-CHARS \
    --ignore-case \
    --LONG-PROMPT \
    --quit-if-one-screen \
    --chop-long-lines"

export MANPAGER='nvim +Man!'

# Plugins ----------------------------------------------------------------------

# zinit lucid light-mode for \
#     mafredri/zsh-async \
#     wait hlissner/zsh-autopair \
#     wait zsh-users/zsh-history-substring-search \
#     wait blockf atpull'zinit creinstall -q .' \
#         zsh-users/zsh-completions \
#     wait atload'_zsh_autosuggest_start' \
#         zsh-users/zsh-autosuggestions \
#     atload"FAST_HIGHLIGHT[chroma-ssh]=''" \
#     atinit"ZINIT[COMPINIT_OPTS]=-C; zpcompinit; zpcdreplay" \
#         zdharma/fast-syntax-highlighting \

# atload"FAST_HIGHLIGHT[chroma-ssh]=''" Disables ssh highlighting which has bad
# performance issues: https://github.com/zdharma/fast-syntax-highlighting/issues/139

# Other ----------------------------------------------------------------------

fpath=($HOME/zsh_completions $fpath)
autoload -U +X bashcompinit && bashcompinit

setopt NO_BEEP

# Stop ctrl-d from closing the shell
setopt IGNORE_EOF

# Aliases ----------------------------------------------------------------------

# Give command history to tclsh
if have_cmd rlwrap; then
    if have_cmd tclsh; then
        alias tclsh="rlwrap -Ar -pcyan tclsh"
    fi
    if have_cmd lua; then
        alias lua="rlwrap -Ar -pcyan --always-readline lua"
    fi
fi

if have_cmd rg; then
    rg() {
        if [[ -t 1 ]]; then
            command rg --pretty --smart-case "$@" | less
        else
            command rg "$@"
        fi
    }

    export FZF_DEFAULT_COMMAND='rg --files --no-ignore --hidden --glob "!.git/*" 2> /dev/null'
fi

# --RAW-CONTROL-CHARS cause --quit-if-one-screen to not work
export LESS="\
    --raw-control-chars \
    --ignore-case \
    --LONG-PROMPT \
    --quit-if-one-screen \
    --chop-long-lines"

if [[ -n "$TMUX" ]]; then
    if [[ -n "$TERM_BACK" ]]; then
        export TERM=$TERM_BACK
    fi
else
    export TERM_BACK=$TERM
fi

if {true} {
    if [[ -n "$TMUX" ]]; then
        local is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
            | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
        local files=(
            "~/.profile"
            "~/.zprofile"
            "~/.zshrc"
            "~/.zshrc_local"
            "~/.aliases"
            "~/.aliases_local"
            "~/.tmux.conf"
            "\$XDG_CONFIG_HOME/nvim/init.vim"
            "\$XDG_CONFIG_HOME/nvim/lua/lewis6991/plugins.lua"
        )
        local menu_spec=""
        local key=0
        for i in $files; {
            # menu_spec+=" '$i' $key \"if-shell $(printf '%q' $is_vim) \
            #     \\\"send-keys ':e   $i' Enter\\\" \
            #     \\\"send-keys 'nvim $i' Enter\\\" \""
            menu_spec+=" '$i' $key $(printf '%q' "if-shell $(printf '%q' $is_vim) \
                $(printf '%q' "send-keys ':e   $i' Enter") \
                $(printf '%q' "send-keys 'nvim $i' Enter")")"
            key=$((key+1))
        }
        eval "tmux bind-key -n M-c display-menu -x W -y S -T '#[fg=colour4]Configuration Files' $menu_spec"
    fi
}

ring_bell() {
    echo -n -e '\a'
}

add-zsh-hook precmd ring_bell

! [ -f ~/.aliases        ] || source ~/.aliases
! [ -f ~/.bash_functions ] || source ~/.bash_functions
! [ -f ~/.aliases_local  ] || source ~/.aliases_local
! [ -f ~/.zshrc_local    ] || source ~/.zshrc_local

unfunction have_cmd
