#!/usr/bin/env bash

set -e

function info() {
    local blue='\033[0;34m'
    local nc='\033[0m' # No Color
    echo -e "$blue$1$nc"
}

function stage() {
    info "$1"
    shift
    "$@" >> "$BUILD_DIR.log"
}

function changes() {
    local upstream
    upstream=$(git rev-parse --abbrev-ref --symbolic-full-name "@{u}")

    local ahead_behind
    read -ra ahead_behind <<< "$(git rev-list --left-right --count "$upstream...HEAD")"

    local -i behind=${ahead_behind[0]}

    if [[ $behind == 0 ]]; then
        info "No changes"
        return 1
    fi

    info "$behind new changes"
    git log --oneline "$upstream...HEAD"

    return 0
}

function install() {
    local install_msg
    if [[ -z "$NVIM_INSTALL_PREFIX" ]] || [[ ! -w "$NVIM_INSTALL_PREFIX" ]]; then
        # Get sudo
        install_msg="Installing (with sudo)"
        SUDO_OPT=sudo
    else
        install_msg="Installing"
        SUDO_OPT=""
    fi

    stage "$install_msg" \
        $SUDO_OPT make \
        CMAKE_BUILD_TYPE=RelWithDebInfo \
        "CMAKE_INSTALL_PREFIX=$NVIM_INSTALL_PREFIX" \
        install
}

BUILD_DIR="$XDG_CACHE_HOME/nvim_build"

rm -f "$BUILD_DIR.log"

if [[ ! -d "$BUILD_DIR/.git" ]]; then
    rm -rf "$BUILD_DIR"
    stage "Cloning neovim" \
        git clone https://github.com/neovim/neovim \
        --depth 1 \
        --quiet \
        "$BUILD_DIR"
fi

cd "$BUILD_DIR"

stage "Fetching updates"   git fetch

if ! changes; then
    info "Done!"
    exit
fi

stage "Rebasing"           git rebase
stage "Cleaning workspace" make distclean
stage "Building"           make
# stage "Building"           make CMAKE_BUILD_TYPE=RelWithDebInfo
install

info "Done!"
